#include<bits/stdc++.h>
#define lli long long int
using namespace std;
lli a[50001];
struct data{
    lli sum,pref,suff,ans;
};
data dt[200005];
data combine(data l, data r) {
    data res;
    res.sum = l.sum + r.sum;
    res.pref = max(l.pref, l.sum + r.pref);
    res.suff = max(r.suff, r.sum + l.suff);
    res.ans = max(max(l.ans, r.ans), l.suff + r.pref);
    return res;
}
data make_pair(int val)
{
    data res;
    res.sum=val;
    res.pref=val;
    res.suff=val;
    res.ans=val;
    return res;
 
}
void build(lli si,lli ss,lli se)
{
    if(ss==se)
    {
        dt[si]=make_pair(a[ss]);
        return;
    }
    lli mid=(ss+se)/2;
    build(2*si,ss,mid);
    build(2*si+1,mid+1,se);
 
    dt[si]=combine(dt[2*si], dt[2*si+1]);
 
}
data query(lli si,lli ss,lli se,lli qs,lli qe)
{
    if(qe<ss || se<qs)
        return make_pair(INT_MIN);
    else if(qs<=ss && se<=qe)
        return dt[si];
    lli mid=(ss+se)/2;
    return combine(query(si*2, ss, mid, qs, qe),
                   query(si*2+1, mid+1, se , qs , qe));
 
}
int main()
{
    lli n;
    cin>>n;
    for(lli i=0;i<n;i++)
        cin>>a[i];
    build(1,0,n-1);
    lli m,l,r;
    cin>>m;
    while(m--)
    {
        cin>>l>>r;
        if(l==r)
            cout<<a[l-1]<<endl;
        else
        {
            data an=query(1,0,n-1,l-1,r-1);
            cout<<an.ans<<endl;
 
        }
 
    }
 
}