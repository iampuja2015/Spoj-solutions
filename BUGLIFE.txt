//It is a simple problem like two coloring problem or Bipartite Test of a graph.
//If the graph can be colored using two colors only, then print "NO suspicious bugs found"
//Otherwise, print "Suspicious bugs found"
#include<iostream>
#include<cmath>
#include<bits/stdc++.h>
#define ll long long
using namespace std;
vector<int> ar[1000001];
int vis[1000001];
int col[1000001];
bool dfs(int v,int c)
{
    vis[v]=1;
    col[v]=c;
    for(int i=0;i<ar[v].size();i++)
    {
        int child=ar[v][i];
        if(vis[child]==0)
        {
            if(dfs(child,c^1)==false)
                return false;
        }
        else
        {
            if(col[v]==col[child])
                return false;
        }
    }
    return true;
}
int main()
{
    int t,n,m,a,b,j=1;;
    cin>>t;
    while(t--)
    {
        cin>>n>>m;
 
        for(int i=1;i<=n;i++)
            vis[i]=0,ar[i].clear(),col[i]=0;
        while(m--)
        {
            cin>>a>>b;
            ar[a].push_back(b);
            ar[b].push_back(a);
        }
        bool ans;
        int flag=1;
        for(int i=1;i<=n;i++)
        {
            if(vis[i]==0)
            {
                ans=dfs(i,0);
                if(ans==0)
                    flag=0;
                    
            }
        }
        if(flag==1)
            cout<<"Scenario #"<<j<<":"<<"\n"<<"No suspicious bugs found!"<<"\n";
        else
            cout<<"Scenario #"<<j<<":"<<"\n"<<"Suspicious bugs found!"<<"\n";
 
        j++;
 
    }
 
 
}